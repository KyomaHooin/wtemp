
#include <SPI.h>
#include <PCD8544_SPI.h>
#include </root/sketchbook/wtemp/nokia/font.h>

#define USE_FRAME_BUFFER //buffered LCD outpu

//#define PIN_DC 8	//data/command switch -> PCD8544_SPI_FB.h
//#define PIN_RESET 9	//reset switch -> PCD8544_SPI_FB.h
#define PIN_SCE 10	//SS -> PCD8544_SPI_FB.h
#define PIN_SDIN 11	//MOSI Hardwired SPI(4Mhz)
#define PIN_SCLK 13	//SCK Hardwired SPI(4Mhz)

//create frame buffered instance
PCD8544_SPI_FB lcd;

//LCD power
#define LCD_POWER 2

// A bitmap graphic (10x2) of a thermometer...
static const byte THERMO_WIDTH = 10;
static const byte THERMO_HEIGHT = 2;
static const byte FONT_WIDTH = 14;
static const byte FONT_HEIGHT = 3;

static const uint8_t thermometer[] = { 0x00, 0x00, 0x48, 0xfe, 0x01, 0xfe, 0x00, 0x02, 0x05, 0x02,
                                    0x00, 0x00, 0x62, 0xff, 0xfe, 0xff, 0x60, 0x00, 0x00, 0x00};

static const byte number[] = { 0x00, 0xfc, 0xfa, 0xf6, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0x0e, 0xf6, 0xfa, 0xfc, 0x00,
                             0x00, 0xef, 0xc7, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0xc7, 0xef, 0x00,
                             0x00, 0x7f, 0xbf, 0xdf, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xdf, 0xbf, 0x7f, 0x00 };
                             
static const byte point[]= { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                             0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xe0, 0xe0, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00 };
                             
static const byte minus[] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                              0x00, 0x00, 0x10, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x38, 0x10, 0x00, 0x00,
                              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
//static const byte degrees_glyph[] = { 0x00, 0x07, 0x05, 0x07, 0x00 };

void setup() {
  pinMode(LCD_POWER, OUTPUT);
  digitalWrite(LCD_POWER, HIGH);
  lcd.begin(0, 0xB1, 0x04, 0x13); //invert, contrast, tempCoef, bias
//  lcd.clear();
//  lcd.write(thermometer, 0, 2, THERMO_WIDTH, THERMO_HEIGHT);
  lcd.print("3.2V      3.1V");
  lcd.writeBitmap(minus,0,2, FONT_WIDTH, FONT_HEIGHT); // x,y,width,height x 8
  lcd.writeBitmap(number, 15,2, FONT_WIDTH, FONT_HEIGHT); // x,y,width,height x 8
  lcd.writeBitmap(number, 30,2, FONT_WIDTH, FONT_HEIGHT); // x,y,width,height x 8
  lcd.writeBitmap(point,43,2, FONT_WIDTH, FONT_HEIGHT); // x,y,width,height x 8
  lcd.writeBitmap(number, 56,2, FONT_WIDTH, FONT_HEIGHT); // x,y,width,height x 8
  lcd.writeBitmap(thermometer, 74, 2, THERMO_WIDTH, THERMO_HEIGHT);
  lcd.renderAll();
}

void loop () {
}

